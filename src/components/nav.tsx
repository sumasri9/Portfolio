'use client';
import { useEffect, useState } from 'react';
import Link from 'next/link';
import { navLinks } from '../constants';
import MenuButton from '../components/menuButton';
import MobileMenu from '../components/mobileMenu';
import webGLFluidEnhanced from 'webgl-fluid-enhanced';
import { motion, Variants } from 'framer-motion';
import { fadeIn } from '../utils/motion';
import { changeVariant, changePalette, isDarkVariant } from '../utils/colors';

const Nav = () => {
  const [isDarkMode, setIsDarkMode] = useState(isDarkVariant);
  const [isOpen, setIsOpen] = useState(false);

  const changeTheme = () => {
    changePalette();
  };
  const toggleDarkMode = () => {
    changeVariant();
    setIsDarkMode(!isDarkMode);
  };

  const PaletteIcon = ({ tabIndex }: { tabIndex: number }) => (
    <motion.svg
      width='100%'
      height='100%'
      viewBox='0 0 256 256'
      className='h-6 w-6 text-text hover:text-primary focus:text-primary'
      tabIndex={tabIndex}
      whileHover={{ translateY: '-2px' }}
      transition={{ duration: 0.2 }}
      onClick={changeTheme}
      onKeyDown={(event) => {
        if (event.key === 'Enter') {
          changeTheme();
        }
      }}
    >
      <g transform='matrix(10.882,0,0,10.882,0,21.5682)'>
        <path
          d='M12.637,19.561C16.748,19.561 19.492,18.106 19.492,15.957C19.492,14.033 17.852,13.604 17.852,12.471C17.852,10.908 23.525,10.596 23.525,6.582C23.525,2.617 19.434,0 13.359,0C5.381,0 0,3.984 0,9.951C0,15.693 5.107,19.561 12.637,19.561ZM12.637,17.891C6.025,17.891 1.67,14.707 1.67,9.951C1.67,4.971 6.299,1.67 13.359,1.67C18.486,1.67 21.856,3.662 21.856,6.582C21.856,9.99 16.143,9.531 16.143,12.48C16.143,14.15 17.822,14.678 17.822,15.83C17.822,17.07 15.781,17.891 12.637,17.891ZM11.836,15.586C13.32,15.586 14.541,14.365 14.541,12.871C14.541,11.397 13.32,10.176 11.836,10.176C10.352,10.176 9.131,11.397 9.131,12.871C9.131,14.365 10.352,15.586 11.836,15.586ZM11.836,14.453C10.967,14.453 10.264,13.75 10.264,12.871C10.264,11.904 11.006,11.328 11.816,11.318C12.647,11.309 13.408,11.875 13.408,12.871C13.408,13.75 12.715,14.453 11.836,14.453Z'
          fill='currentColor'
        />
        <path
          d='M4.932,11.289C5.83,11.289 6.553,10.547 6.553,9.648C6.553,8.75 5.83,8.027 4.932,8.027C4.043,8.027 3.311,8.75 3.311,9.648C3.311,10.547 4.043,11.289 4.932,11.289Z'
          fill='currentColor'
        />
        <path
          d='M8.496,8.164C9.629,8.164 10.547,7.256 10.547,6.104C10.547,4.98 9.619,4.082 8.496,4.082C7.354,4.082 6.436,4.98 6.436,6.104C6.436,7.256 7.354,8.164 8.496,8.164Z'
          fill='currentColor'
        />
        <path
          d='M13.447,6.582C14.365,6.582 15.088,5.85 15.088,4.932C15.088,4.023 14.365,3.291 13.447,3.291C12.549,3.291 11.797,4.023 11.797,4.932C11.797,5.85 12.549,6.582 13.447,6.582Z'
          fill='currentColor'
        />
        <path
          d='M17.91,7.207C18.643,7.207 19.229,6.611 19.229,5.869C19.229,5.137 18.643,4.541 17.91,4.541C17.168,4.541 16.563,5.137 16.563,5.869C16.563,6.611 17.168,7.207 17.91,7.207Z'
          fill='currentColor'
        />
      </g>
    </motion.svg>
  );

  const SunIcon = ({ tabIndex }: { tabIndex: number }) => (
    <motion.svg
      width='100%'
      height='100%'
      viewBox='0 0 256 256'
      className='h-6 w-6 text-text hover:text-primary focus:text-primary'
      tabIndex={tabIndex}
      whileHover={{ translateY: '-2px' }}
      transition={{ duration: 0.2 }}
      onClick={toggleDarkMode}
      onKeyDown={(event) => {
        if (event.key === 'Enter') {
          toggleDarkMode();
        }
      }}
    >
      <g transform='matrix(12.1195,0,0,12.086,0,0)'>
        <path
          d='M10.566,3.799C11.025,3.799 11.406,3.418 11.406,2.949L11.406,0.85C11.406,0.381 11.025,0 10.566,0C10.098,0 9.717,0.381 9.717,0.85L9.717,2.949C9.717,3.418 10.098,3.799 10.566,3.799ZM15.352,5.801C15.684,6.123 16.221,6.133 16.553,5.801L18.047,4.307C18.369,3.984 18.369,3.438 18.047,3.105C17.725,2.783 17.188,2.783 16.856,3.105L15.352,4.609C15.029,4.941 15.029,5.479 15.352,5.801ZM17.334,10.596C17.334,11.055 17.725,11.436 18.184,11.436L20.283,11.436C20.742,11.436 21.123,11.055 21.123,10.596C21.123,10.137 20.742,9.746 20.283,9.746L18.184,9.746C17.725,9.746 17.334,10.137 17.334,10.596ZM15.352,15.391C15.029,15.723 15.029,16.26 15.352,16.582L16.856,18.096C17.188,18.408 17.725,18.398 18.047,18.086C18.369,17.754 18.369,17.217 18.047,16.895L16.543,15.391C16.221,15.078 15.684,15.078 15.352,15.391ZM10.566,17.393C10.098,17.393 9.717,17.773 9.717,18.232L9.717,20.342C9.717,20.801 10.098,21.182 10.566,21.182C11.025,21.182 11.406,20.801 11.406,20.342L11.406,18.232C11.406,17.773 11.025,17.393 10.566,17.393ZM5.771,15.391C5.439,15.078 4.893,15.078 4.57,15.391L3.076,16.885C2.754,17.207 2.754,17.744 3.066,18.076C3.389,18.389 3.936,18.398 4.268,18.086L5.762,16.582C6.084,16.26 6.084,15.723 5.771,15.391ZM3.789,10.596C3.789,10.137 3.398,9.746 2.939,9.746L0.84,9.746C0.381,9.746 0,10.137 0,10.596C0,11.055 0.381,11.436 0.84,11.436L2.939,11.436C3.398,11.436 3.789,11.055 3.789,10.596ZM5.762,5.801C6.084,5.488 6.084,4.932 5.771,4.609L4.277,3.105C3.955,2.793 3.408,2.783 3.086,3.105C2.764,3.438 2.764,3.984 3.076,4.297L4.57,5.801C4.893,6.123 5.43,6.123 5.762,5.801Z'
          fill='currentColor'
        />
        <path
          d='M10.557,15.576C13.272,15.576 15.527,13.32 15.527,10.596C15.527,7.861 13.272,5.605 10.557,5.605C7.842,5.605 5.586,7.861 5.586,10.596C5.586,13.32 7.842,15.576 10.557,15.576ZM10.557,14.082C8.652,14.082 7.07,12.5 7.07,10.596C7.07,8.682 8.652,7.1 10.557,7.1C12.461,7.1 14.043,8.682 14.043,10.596C14.043,12.5 12.461,14.082 10.557,14.082Z'
          fill='currentColor'
        />
      </g>
    </motion.svg>
  );

  const MoonIcon = ({ tabIndex }: { tabIndex: number }) => (
    <motion.svg
      width='100%'
      height='100%'
      viewBox='0 0 256 256'
      className='h-6 w-6 text-text hover:text-primary focus:text-primary'
      tabIndex={tabIndex}
      whileHover={{ translateY: '-2px' }}
      transition={{ duration: 0.2 }}
      onClick={toggleDarkMode}
      onKeyDown={(event) => {
        if (event.key === 'Enter') {
          toggleDarkMode();
        }
      }}
    >
      <g transform='matrix(13.0291,0,0,12.9582,0,0)'>
        <path
          d='M15.342,13.262C9.961,13.262 6.621,10.02 6.621,4.814C6.621,3.33 6.865,2.021 7.227,1.318C7.373,1.035 7.402,0.898 7.402,0.703C7.402,0.381 7.1,0 6.689,0C6.611,0 6.426,0.029 6.152,0.137C2.539,1.602 0,5.41 0,9.512C0,15.44 4.307,19.756 10.234,19.756C14.482,19.756 17.93,17.529 19.512,13.877C19.629,13.623 19.648,13.408 19.648,13.301C19.648,12.9 19.307,12.627 19.004,12.627C18.848,12.627 18.731,12.637 18.496,12.725C17.705,13.047 16.514,13.262 15.342,13.262ZM1.533,9.443C1.533,6.406 3.115,3.516 5.645,1.924C5.332,2.832 5.166,3.838 5.166,4.951C5.166,11.055 8.887,14.688 15.117,14.688C16.123,14.688 16.973,14.57 17.783,14.287C16.299,16.738 13.438,18.232 10.293,18.232C5.225,18.232 1.533,14.541 1.533,9.443Z'
          fill='currentColor'
        />
      </g>
    </motion.svg>
  );

  const handleClick = () => {
    setIsOpen(!isOpen);
  };

  const handleMenuItemClick = () => {
    setIsOpen(false);
  };

  useEffect(() => {
    const navElements = document.querySelectorAll('.nav-link');
    for (let i = 0; i < navElements.length; i++) {
      navElements[i].addEventListener('click', () => {
        webGLFluidEnhanced.splats();
      });
    }
  }, []);

  return (
    <nav className='paddingX fixed top-0 z-20 flex w-full items-center bg-secondary py-5 shadow-xl'>
      <div className='mx-auto flex w-full max-w-7xl select-none items-center justify-between'>
        <Link
          href='/'
          className='nav-link flex items-center gap-2'
          onClick={() => {
            window.scrollTo(0, 0);
          }}
        >



<motion.svg version="1.0" 
xmlns="http://www.w3.org/2000/svg"
width='300'
height='200'
viewBox='0 0 1300 900'
className='h-9 w-9 object-contain text-text'
variants={fadeIn('', '', 0, 1) as Variants}
initial='hidden'
animate='show'>

<rect width='900' height='800' fill={isDarkMode ? 'black' : 'white'} />

<g transform="translate(0.000000,850.000000) scale(0.100000,-0.100000)"
fill="#000000" stroke="none">
<path d="M0 4450 l0 -4450 5100 0 5100 0 0 4450 0 4450 -5100 0 -5100 0 0
-4450z m4209 3820 c157 -9 373 -40 411 -60 9 -4 31 -11 49 -15 41 -9 192 -68
241 -94 39 -21 95 -52 131 -73 44 -25 164 -122 225 -183 88 -87 175 -202 221
-292 12 -23 26 -50 32 -60 21 -38 61 -132 61 -143 0 -5 4 -18 10 -28 18 -32
49 -164 81 -347 6 -33 12 -177 13 -320 1 -257 1 -260 -23 -298 -12 -21 -42
-48 -65 -60 -41 -22 -44 -22 -536 -22 l-495 0 -43 28 c-67 44 -79 82 -86 277
-13 409 -124 554 -461 601 -105 15 -860 6 -905 -11 -19 -7 -61 -22 -92 -34
-109 -39 -189 -116 -224 -214 -9 -26 -20 -56 -24 -67 -25 -60 -43 -241 -44
-445 -1 -232 5 -271 60 -365 72 -125 278 -237 504 -274 30 -5 62 -12 70 -15 8
-3 74 -10 145 -16 72 -6 164 -15 205 -20 41 -6 109 -14 150 -20 329 -41 787
-152 1035 -250 205 -80 314 -145 437 -259 71 -66 192 -208 210 -247 8 -17 -14
-61 -131 -262 -78 -133 -141 -245 -141 -249 0 -3 -6 -14 -14 -22 -7 -9 -25
-37 -40 -63 -61 -112 -86 -155 -218 -380 -76 -130 -138 -241 -138 -246 0 -6
-4 -12 -8 -14 -5 -1 -22 -28 -39 -58 -58 -107 -88 -157 -225 -391 -76 -131
-138 -242 -138 -247 0 -6 -4 -12 -8 -14 -5 -1 -22 -28 -39 -58 -50 -90 -68
-123 -233 -405 -86 -148 -168 -290 -182 -315 -53 -95 -75 -133 -235 -410 -343
-591 -462 -796 -482 -833 -12 -20 -30 -52 -40 -71 -11 -18 -25 -44 -33 -57 -7
-13 -15 -26 -18 -29 -3 -3 -18 -30 -34 -60 -36 -68 -67 -113 -73 -106 -2 2 1
15 8 28 7 12 14 25 14 28 0 3 11 27 23 54 12 27 22 50 22 53 0 2 10 25 21 51
12 26 30 67 41 92 10 25 23 54 28 65 5 11 19 43 31 70 11 28 27 64 34 80 8 17
32 75 55 129 23 54 45 106 50 115 4 9 20 45 35 81 14 36 30 74 35 85 5 11 16
38 26 60 9 22 25 58 34 80 39 88 50 113 74 172 14 34 26 64 26 67 0 2 -183 6
-407 9 -225 4 -433 10 -463 16 -269 47 -458 120 -659 252 -89 59 -241 197
-289 264 -12 17 -37 51 -56 76 -40 53 -122 208 -153 289 -20 53 -34 99 -67
220 -31 116 -50 311 -50 535 -1 208 0 222 21 261 12 23 39 52 60 65 l38 24
505 0 505 0 37 -23 c56 -35 78 -90 78 -196 0 -122 27 -329 52 -401 65 -186
177 -259 451 -296 49 -7 228 -9 475 -6 424 5 433 6 586 63 93 35 179 131 223
249 50 135 70 495 34 631 -46 176 -157 291 -371 383 -30 13 -62 27 -70 31 -9
4 -43 13 -75 20 -33 7 -69 16 -80 21 -11 4 -65 13 -120 19 -55 5 -163 17 -240
25 -77 8 -151 18 -165 21 -14 3 -63 12 -110 20 -202 33 -409 73 -435 84 -11 5
-40 13 -65 19 -25 5 -76 18 -115 29 -38 11 -90 25 -115 32 -25 6 -54 15 -65
20 -11 5 -56 21 -100 36 -183 63 -236 86 -326 145 -95 63 -153 113 -231 203
-140 162 -229 320 -293 526 -52 164 -53 170 -75 328 -17 122 -20 198 -20 534
0 429 5 485 61 726 6 26 15 52 19 57 4 6 10 24 14 40 19 82 114 272 187 373
64 87 245 261 334 320 230 153 517 244 823 261 200 12 1128 12 1331 1z m3457
-96 c-9 -16 -25 -51 -36 -79 -12 -27 -25 -59 -30 -70 -5 -11 -19 -42 -31 -70
-11 -27 -27 -63 -34 -80 -8 -16 -48 -111 -90 -210 -42 -99 -80 -189 -85 -200
-11 -25 -46 -106 -72 -165 -10 -25 -23 -54 -28 -65 -56 -126 -130 -305 -130
-313 0 -5 50 -11 118 -14 106 -4 121 -7 165 -32 77 -45 107 -94 138 -221 32
-135 71 -280 79 -300 5 -11 14 -45 20 -75 6 -30 14 -62 18 -70 3 -8 11 -37 17
-65 7 -27 20 -77 29 -110 10 -33 24 -89 32 -125 9 -36 19 -74 24 -85 4 -11 16
-51 25 -90 34 -140 44 -181 59 -235 8 -30 24 -89 35 -130 11 -41 25 -97 31
-125 6 -27 15 -59 20 -70 5 -11 13 -40 19 -65 18 -84 72 -295 81 -315 5 -11
15 -49 23 -85 9 -36 22 -90 31 -120 31 -115 48 -177 62 -240 9 -36 18 -72 21
-80 4 -8 12 -37 18 -65 18 -72 81 -307 88 -325 3 -8 10 -35 15 -60 19 -86 44
-185 52 -205 5 -11 13 -40 19 -65 5 -25 19 -79 30 -120 11 -41 26 -97 31 -125
6 -27 14 -57 17 -65 3 -8 22 -73 40 -145 19 -71 41 -155 49 -185 9 -30 22 -84
30 -120 9 -36 18 -72 21 -80 4 -8 12 -37 19 -65 7 -27 20 -77 29 -110 9 -33
23 -89 31 -125 8 -36 19 -74 24 -85 5 -11 13 -40 19 -65 10 -47 41 -167 67
-260 15 -54 24 -92 59 -235 9 -38 21 -79 25 -90 8 -19 61 -220 85 -320 6 -27
14 -57 17 -65 8 -18 36 -130 48 -187 5 -23 16 -66 25 -95 22 -71 31 -108 55
-209 19 -78 19 -88 5 -122 -31 -75 -4 -72 -610 -72 -596 0 -578 -2 -622 64
-12 18 -25 50 -28 70 -4 20 -10 45 -14 56 -7 18 -64 240 -122 480 -23 93 -34
138 -84 330 -20 77 -43 169 -51 204 -8 35 -17 67 -20 72 -3 5 -408 9 -955 9
l-949 0 -10 -23 c-6 -12 -17 -51 -26 -87 -8 -36 -22 -90 -29 -120 -8 -30 -23
-91 -34 -135 -11 -44 -27 -107 -36 -140 -9 -33 -23 -89 -31 -124 -8 -35 -16
-67 -19 -71 -3 -4 -11 -36 -19 -71 -8 -35 -35 -145 -60 -243 -48 -188 -71
-235 -124 -259 -40 -18 -1098 -17 -1129 1 -35 19 -56 68 -50 116 2 22 19 95
37 161 17 66 40 152 50 190 16 62 64 245 106 405 8 30 21 80 29 110 18 71 52
200 71 270 9 30 21 80 29 110 7 30 22 90 34 133 12 42 30 112 42 155 12 42 25
93 29 112 4 19 18 71 30 115 12 44 30 112 40 150 29 112 78 296 93 350 8 28
67 139 131 248 64 108 116 200 116 204 0 3 6 14 14 22 7 9 25 37 40 64 69 125
61 110 586 1017 145 251 168 291 218 380 37 66 261 452 272 470 6 8 16 26 22
40 7 14 15 27 19 30 3 3 19 30 36 60 16 30 42 75 57 100 15 25 29 53 33 63 3
9 9 17 14 17 5 0 9 5 9 11 0 6 62 117 138 247 132 225 157 268 218 380 15 26
33 54 40 63 8 8 14 19 14 23 0 4 74 134 164 289 90 155 247 426 349 602 102
176 194 336 206 355 11 19 25 44 30 55 5 11 68 120 140 243 72 123 131 228
131 235 0 8 3 8 10 1 8 -8 6 -20 -4 -40z" fill={isDarkMode ? 'white' : 'black'}/>
<path d="M6545 5603 c-15 -65 -31 -127 -35 -138 -4 -11 -20 -74 -35 -140 -15
-66 -31 -131 -35 -145 -4 -14 -18 -65 -30 -115 -12 -49 -28 -115 -36 -145 -8
-30 -18 -73 -23 -95 -13 -57 -59 -243 -73 -290 -6 -22 -17 -65 -24 -95 -12
-52 -35 -145 -70 -285 -43 -169 -80 -320 -98 -395 -8 -30 -19 -75 -25 -100
-50 -194 -65 -253 -77 -309 -8 -35 -16 -67 -19 -71 -3 -5 -11 -39 -19 -77 -8
-37 -25 -111 -39 -163 -13 -52 -27 -107 -31 -122 l-6 -28 725 0 c399 0 725 2
725 5 0 3 -4 13 -9 23 -5 9 -21 71 -36 137 -15 66 -31 131 -35 145 -5 14 -12
41 -15 60 -3 19 -10 44 -15 55 -5 11 -15 52 -24 90 -8 39 -21 97 -30 130 -8
33 -22 89 -30 125 -8 36 -18 73 -21 82 -4 9 -13 43 -20 75 -7 32 -21 87 -30
123 -9 36 -24 99 -34 140 -10 41 -20 82 -23 90 -3 8 -18 65 -33 125 -55 223
-67 271 -79 325 -8 30 -19 75 -25 100 -63 244 -96 376 -111 450 -5 25 -17 70
-25 100 -25 88 -33 119 -60 235 -40 173 -54 215 -74 215 -14 0 -23 -23 -46
-117z" fill={isDarkMode ? 'white' : 'black'}/>
</g>
</motion.svg>





          <motion.p
            className='flex cursor-pointer font-mono text-[18px] font-bold text-text'
            variants={fadeIn('', '', 0, 1) as Variants}
            initial='hidden'
            animate='show'
          >
            Suma&nbsp;
            <span className='hidden md:block'>Sri Chowdary Atheti</span>
          </motion.p>
        </Link>
        <ul className='hidden list-none flex-row gap-10 sm:flex'>
          {navLinks.map((link, index) => (
            <motion.li
              key={link.id}
              className='nav-link cursor-pointer font-mono text-[18px] font-medium text-text hover:text-primary focus:text-primary'
              tabIndex={0}
              variants={fadeIn('down', '', index * 0.25, 1) as Variants}
              initial='hidden'
              animate='show'
              whileHover={{ translateY: '-2px' }}
              transition={{ duration: 0.2 }}
              onClick={() => {
                if (link.external_link) {
                  window.open(link.external_link, '_blank', 'noopener,noreferrer');
                } else {
                  window.location.href = `#${link.id}`;
                }
              }}
              onKeyDown={(event) => {
                if (event.key === 'Enter') {
                  if (link.external_link) {
                    window.open(link.external_link, '_blank', 'noopener,noreferrer');
                  } else {
                    window.location.href = `#${link.id}`;
                  }
                }
              }}
            >
              {link.title}
            </motion.li>
          ))}
          <motion.li
            className='flex w-full cursor-pointer flex-row items-center gap-3 object-contain'
            variants={fadeIn('down', '', navLinks.length * 0.25, 1) as Variants}
            initial='hidden'
            animate='show'
          >
            {isDarkMode ? <SunIcon tabIndex={0} /> : <MoonIcon tabIndex={0} />}
            <PaletteIcon tabIndex={0} />
          </motion.li>
        </ul>
        <motion.div
          className='flex flex-1 items-center justify-end sm:hidden'
          variants={fadeIn('down', '', 0.25, 1) as Variants}
          initial='hidden'
          animate='show'
        >
          <MenuButton onClick={handleClick} isOpen={isOpen} />
        </motion.div>
      </div>
      <MobileMenu isOpen={isOpen} onClose={handleMenuItemClick} isDarkMode={isDarkMode} PaletteIcon={PaletteIcon} SunIcon={SunIcon} MoonIcon={MoonIcon} />
    </nav>
  );
};

export default Nav;
